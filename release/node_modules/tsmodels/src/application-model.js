"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Base class for model implementation
 */
var Model = (function () {
    function Model() {
    }
    /**
     * Converter of backend data to model format by aliases
     *
     * @param value data from backend
     * @public
     */
    Model.prototype._fromJSON = function (value) {
        var _this = this;
        this.constructor['_alias']
            .forEach(function (item) {
            var newValue = value[item['value']];
            if (item['type']) {
                if (Array.isArray(newValue)) {
                    _this[item['value']] = newValue.map(function (x) { return _this._createObject(item, x); });
                }
                else if (_this._isObject(newValue)) {
                    _this[item['value']] = _this._createObject(item, newValue);
                }
            }
            else {
                _this[item['key']] = value[item['value']];
            }
        });
    };
    /**
     * Converter of model format to backend data by aliases
     *
     * @return new object
     * @public
     */
    Model.prototype._toJSON = function () {
        var _this = this;
        var obj = {};
        this.constructor['_alias']
            .forEach(function (item) {
            var value = _this[item['key']];
            if (item['type']) {
                if (Array.isArray(value)) {
                    obj[item['value']] = value.map(function (x) { return x._toJSON(); });
                }
                else if (_this._isObject(value)) {
                    obj[item['value']] = value._toJSON();
                }
            }
            else {
                obj[item['value']] = _this[item['key']];
            }
        });
        return obj;
    };
    Model.prototype._createObject = function (item, obj) {
        var newObj = new item['type']();
        newObj._fromJSON(obj);
        return newObj;
    };
    Model.prototype._isObject = function (item) {
        return Object.prototype.toString.call(item) === '[object Object]';
    };
    return Model;
}());
exports.Model = Model;
/**
 * @deprecated Use the `AppModel` instead. Will be remove in version 1.0.0
 */
exports.ApplicationModel = Model;
/**
 * @deprecated Use the `AppModel` instead. Will be remove in version 1.0.0
 */
exports.AppModel = Model;
//# sourceMappingURL=application-model.js.map